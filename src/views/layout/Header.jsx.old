import PropTypes from "prop-types";
import { map as _map } from "lodash";
import { User as UserIcon } from "@icons";
import React, { PureComponent } from "react";
import { generateUrl, userNavRoutes } from "@/services/routing";
import {
  Dropdown,
  Nav,
  Navbar,
  NavbarBrand,
  UncontrolledDropdown
} from "@/components/shared";

class Header extends PureComponent {
  static propTypes = {
    currentUser: PropTypes.shape({ displayName: PropTypes.string })
  };

  makeNavItem(navConfig, key) {
    if (navConfig.children) {
      return (
        <UncontrolledDropdown nav inNavbar key={key}>
          <Dropdown.Toggle nav caret>
            {navConfig.title}
          </Dropdown.Toggle>
          <Dropdown.Menu>
            {_map(navConfig.children, (val, key) => (
              <Dropdown.Item tag="a" href={val.path} key={key}>
                {val.title}
              </Dropdown.Item>
            ))}
          </Dropdown.Menu>
        </UncontrolledDropdown>
      );
    }

    return (
      <Nav.Item key={key}>
        <Nav.Link href={navConfig.path}>{navConfig.title}</Nav.Link>
      </Nav.Item>
    );
  }

  render() {
    const { currentUser } = this.props;

    return (
      <Navbar color="dark" dark expand="md">
        <NavbarBrand href={generateUrl("home")}>AVA3</NavbarBrand>
        <Nav className="mr-auto" navbar>
          {currentUser &&
            _map(userNavRoutes(currentUser), (routeConfig, name) =>
              this.makeNavItem(routeConfig, name)
            )}
        </Nav>
        <Nav navbar>
          <UncontrolledDropdown nav inNavbar>
            <Dropdown.Toggle nav caret>
              <UserIcon /> {currentUser && currentUser.displayName}
            </Dropdown.Toggle>
            <Dropdown.Menu right>
              <Dropdown.Item tag="a" href={generateUrl("logout")}>
                Logout
              </Dropdown.Item>
            </Dropdown.Menu>
          </UncontrolledDropdown>
        </Nav>
      </Navbar>
    );
  }
}

export default Header;
